# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n-qnryBJ37KhLbK6HmGo1s9rX8309OIS
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
url = "https://www.espncricinfo.com/rankings/icc-team-ranking"
response = requests.get(url)
soup = BeautifulSoup(response.content, 'html.parser')
tables = soup.find_all('table')
data_frames = []

for i in range(3):
    table = tables[i]
    headers = [header.text.strip() for header in table.find_all('th')]
    rows = []

    for row in table.find_all('tr')[1:]:
        cols = [col.text.strip() for col in row.find_all('td')]
        if cols:
            rows.append(cols)

    df = pd.DataFrame(rows, columns=headers)
    data_frames.append(df)
    print(df)

for index, df in enumerate(data_frames):
    csv_filename = f'icc_team_ranking_table_{index + 1}.csv'
    df.to_csv(csv_filename, index=False)
    print(df)

df1 = pd.read_csv('icc_team_ranking_table_1.csv')  # Test
df2 = pd.read_csv('icc_team_ranking_table_2.csv')  # ODI
df3 = pd.read_csv('icc_team_ranking_table_3.csv')  # T20


df1.rename(columns={'Rating': 'Rating_Test'}, inplace=True)
df2.rename(columns={'Rating': 'Rating_ODI'}, inplace=True)
df3.rename(columns={'Rating': 'Rating_T20'}, inplace=True)


merged_df = df1[['Team', 'Rating_Test']].merge(df2[['Team', 'Rating_ODI']], on='Team').merge(df3[['Team', 'Rating_T20']], on='Team')
print(merged_df)

merged_df['Consistency'] = merged_df[['Rating_Test', 'Rating_ODI', 'Rating_T20']].max(axis=1) - merged_df[['Rating_Test', 'Rating_ODI', 'Rating_T20']].min(axis=1)

sorted_df = merged_df.sort_values(by='Consistency', ascending=False)
print("Teams sorted by performance consistency across formats (Test, ODI, T20):")
print(sorted_df[['Rating_Test', 'Rating_ODI', 'Rating_T20', 'Consistency']])

print(merged_df.head())

merged_df.set_index('Team', inplace=True)

sns.set(style="whitegrid")
plt.figure(figsize=(20, 12))
colors = sns.color_palette("Set2", 3)  # Use 'Set2' for a colorful palette
merged_df.plot(kind='bar', figsize=(10, 6), color=colors)

plt.title('ICC Team Ratings Across Formats (Test, ODI, T20)', fontsize=18, weight='bold')
plt.xlabel('Teams', fontsize=14)
plt.ylabel('Rating', fontsize=14)
plt.xticks(rotation=45, ha='right', fontsize=12)
plt.legend(title='Format', fontsize=12)
plt.tight_layout()

plt.show()

sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))

colors = sns.color_palette("Set3", 4)
ax = merged_df.plot(kind='bar', figsize=(10, 6), color=[colors[0], colors[1], colors[2],colors[3]])

plt.title('ICC Team Ratings Across Formats (Test, ODI, T20)', fontsize=18, weight='bold')
plt.xlabel('Teams', fontsize=14)
plt.ylabel('Rating', fontsize=14)
plt.xticks(rotation=45, ha='right', fontsize=12)
plt.legend(title='Format', fontsize=12)
plt.tight_layout()

plt.show()

"""**Visualizing Top 20 ODI Teams**"""

top_odi_df = df2.nlargest(20, 'Rating_ODI')
plt.figure(figsize=(10, 6))
sns.barplot(x='Team', y='Rating_ODI', data=top_odi_df, palette='coolwarm')

plt.title('Top 20 ODI Teams by Rating', fontsize=16, weight='bold')
plt.xlabel('Team', fontsize=14)
plt.ylabel('Rating', fontsize=14)
plt.xticks(rotation=45, ha='right')
plt.tight_layout()

plt.show()

"""***Visualizing Test ***"""

plt.figure(figsize=(10, 6))
sns.barplot(x='Team', y='Rating_Test', data=df1, palette='viridis')

plt.title('Test Team Rankings by Rating', fontsize=16, weight='bold')
plt.xlabel('Team', fontsize=14)
plt.ylabel('Rating', fontsize=14)
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()

"""**Visualize T20 rankings**"""

plt.figure(figsize=(10, 6))
sns.barplot(x='Team', y='Rating_T20', data=df3, palette='magma')

plt.title('T20 Team Rankings by Rating', fontsize=16, weight='bold')
plt.xlabel('Team', fontsize=14)
plt.ylabel('Rating', fontsize=14)
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.show()